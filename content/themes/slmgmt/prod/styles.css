a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:'';content:none}table{border-collapse:collapse;border-spacing:0}a,u{text-decoration:none}button:focus,input:focus,select:focus,textarea:focus{outline:0}#contact h1,.font-chron-di{font-family:"Chronicle Display A","Chronicle Display B";font-style:italic;font-weight:400}#biz-address address,#medals #medals-cta,#slide-menu ul li,#terms>p,.font-sweet-m,.info-window,a,h1,h2,h3,h5{font-family:"Sweet Sans Medium",sans-serif;font-style:normal;font-weight:400}#properties ul li,.font-goth-b,p{font-family:"Gotham SSm A","Gotham SSm B";font-style:normal;font-weight:400}a,h1,h2,h3,h5{text-transform:uppercase;letter-spacing:.1em}p{line-height:1.5em;letter-spacing:.05em;color:#fff}body{overflow-x:hidden}img{width:100%}.arrow{width:40px;height:40px}#nav{display:flex;justify-content:space-between;align-items:flex-start;flex-wrap:wrap;position:fixed;top:0;left:0;width:100vw;height:50px;z-index:100}#nav-name{margin-top:19px;margin-left:30px}#hamburger{margin-top:12px;margin-right:30px}#hamburger svg{width:40px;height:22px}#close{position:absolute;top:0;right:0;margin-top:10px;margin-right:37px}#close svg{width:25px;height:28px}#nav-bg{width:100%;height:100%}#slide-menu{display:none;position:fixed;top:0;right:-100vw;width:100vw;height:100vh;z-index:100}@media (min-width:850px){#slide-menu{right:-60vw;width:60vw}}#slide-menu ul{margin-left:75px;margin-top:20vh}#slide-menu li{margin-top:40px}#nav{background-color:rgba(0,0,0,.5)}#nav #nav-name{font-size:.7em;opacity:1}#nav #nav-name a{color:#fff;transition:color .3s}#nav #nav-name a:hover{color:#ef4136}#slide-menu{background-color:rgba(0,0,0,.8)}#slide-menu ul li{font-size:1.5em;letter-spacing:.1em;text-transform:uppercase}@media (min-width:850px){#slide-menu ul li{font-size:2em}}#slide-menu ul li a{color:#fff;transition:color .3s}#slide-menu ul li a:hover{color:#ef4136}#hamburger .ham-cls1{transition:stroke .3s}#hamburger:hover .ham-cls1{stroke:#ef4136}#close .close-cls1{transition:stroke .3s}#close:hover .close-cls1{stroke:#ef4136}#main{width:100vw;height:100vh}#main h1{padding-top:40vh;margin-left:12%}#main h2{margin-top:6px;margin-left:12%;max-width:500px}@media (min-width:850px){#main h2{width:740px}}#main .arrow{margin-top:10px;margin-left:12%}#sldr-albert{display:flex;justify-content:space-between;align-items:flex-start;flex-wrap:nowrap;position:absolute;top:0;left:0;width:100vw;height:110vh;overflow:hidden;z-index:-1}#sldr-albert .albert{display:none;flex:1 0 100%;height:100%}#main h1{font-size:1.5em;color:#ef4136;line-height:1.4em}@media (min-width:850px){#main h1{font-size:2em}}#main h2{font-size:.9em;color:#fff;line-height:1.4em}@media (min-width:850px){#main h2{font-size:1.5em}}#sa-1,#sa-2,#sa-3,#sa-4{background-repeat:no-repeat;background-position:center;background-size:cover}.albert{transform:scale(1.2);transform-origin:9cm 3px}#albert-down:hover .arrow-1{fill:#ef4136}#albert-down .arrow-1{transition:fill .3s}#bio{display:flex;justify-content:space-between;align-items:flex-start;flex-wrap:wrap;width:100vw;height:100%;overflow:hidden}@media (min-width:850px){#bio{height:800px}}#bio>.image{flex:0 0 100vw;height:400px;overflow:hidden}@media (min-width:850px){#bio>.image{flex:0 0 50vw;height:100%}}#bio>.copy{flex:0 0 calc(100vw - 20%);padding:10%}@media (min-width:850px){#bio>.copy{flex:0 0 calc(50vw - 20%)}}#bio>.copy>a{display:block;padding-top:30px}#bio{background-color:#283038}#bio>.image{background-repeat:no-repeat;background-position:center;background-size:cover}#bio>.copy>a{color:#ef4136;font-size:.8em;transition:color .3s}#bio>.copy>a:hover{color:#fff}.underline{border-bottom:1px solid #fff}#map{width:100%;height:100vh}@media (min-width:850px){#map{height:900px}}#google-map{width:100%;height:100vh}@media (min-width:850px){#google-map{height:900px}}.pin-1{height:40px;width:20px}.info-window{color:#283038;text-transform:uppercase;font-size:.8em}#foot{height:100%;padding-bottom:40px}@media (min-width:850px){#foot{height:200px}}#biz-address{display:flex;justify-content:flex-start;align-items:flex-start;flex-wrap:wrap;padding-top:50px;padding-left:50px}#biz-address>.col-1{flex:0 0 auto}#biz-address>.col-2{flex:0 0 100%;margin-top:30px}@media (max-width:500px){#biz-address>.col-2{flex:0 0 auto;margin-top:0;margin-left:30px}}#biz-contact{display:flex;justify-content:space-between;align-items:flex-start;flex-wrap:wrap;padding-top:25px;padding-left:50px;padding-right:50px}#biz-contact #email{width:25px;height:20px}#foot{background-color:#5b6267}#biz-address{font-size:.5em;line-height:2em}#biz-address h1{color:#fff}#biz-address address{color:#283038;text-transform:uppercase;letter-spacing:.08em}#biz-contact #email:hover .mail-cls-1{fill:#fff}#biz-contact #email .mail-cls-1{transition:fill .3s}#terms{font-size:.5em;text-transform:uppercase}#terms>p{color:#283038}#properties{height:100%;padding:100px}#properties>div{column-count:2}@media (min-width:1024px){#properties>div{column-count:3}}@media (min-width:1400px){#properties>div{column-count:5}}@media (max-width:500px){#properties>div{column-count:1}}#properties ul li{padding-top:5px;padding-left:15px;margin-top:2px}#properties ul{padding-bottom:20px}#properties .show .hide{visibility:hidden;height:0;opacity:0;padding-bottom:0}#key{margin-top:-40px;margin-bottom:40px}#properties h1 a{color:#ef4136;font-size:.9em;transition:all .3s}#properties h1 a:hover{color:#283038}#properties ul li{font-size:.7em;color:#283038;text-indent:-15px;line-height:1.2em}#contact{display:flex;justify-content:center;align-items:center;flex-wrap:wrap;flex-direction:column;padding-top:40px;padding-left:15%;padding-right:15%;margin:0 auto}@media (min-width:850px){#contact{align-items:flex-start;flex-direction:row;padding-top:20vh}}#contact .cols{flex:1 0 100%;margin-top:60px;margin-left:0;margin-right:0;width:80vw}@media (min-width:850px){#contact .cols{flex:0 0 calc(33.33% - 40px);margin-top:0;margin-left:20px;margin-right:20px}}#contact p{padding-top:20px;margin-top:40px}#contact{background-color:#283038}#contact h1{text-transform:none;color:#fff;font-size:1.5em}#contact p{color:#ef4136;border-top:2px solid #ef4136}#contact #mail{fill:#ef4136}#email-2 svg{width:50px;height:33.31px}#forms{padding-top:75px;padding-bottom:20vh}#forms form{display:flex;justify-content:space-between;align-items:flex-start;flex-wrap:wrap;flex-direction:column;width:80vw;margin:0 auto}@media (min-width:850px){#forms form{width:800px}}#forms form textarea{flex:0 0 150px}#f-submit{flex:0 0 40px;align-self:flex-end;width:100px;margin-top:20px}#f-email,#f-fullname,#f-notes{flex:0 0 50px;width:100%}#f-notes{padding-top:15px}#forms{background-color:#283038}#forms form input,#forms form textarea{background-color:#283038;border-top:2px solid #fff;border-left:0;border-right:0;border-bottom:0}#forms form #f-submit{color:#ef4136;border:2px solid #fff;text-transform:uppercase;letter-spacing:.1em;transition:color .2s,background-color .1s}#forms form #f-submit:hover{color:#283038;background-color:#fff}#f-email,#f-fullname,#f-notes{color:#fff;text-transform:uppercase;letter-spacing:.1em}#f-email::-webkit-input-placeholder,#f-fullname::-webkit-input-placeholder,#f-notes::-webkit-input-placeholder{color:#fff}#f-email:-moz-placeholder,#f-fullname:-moz-placeholder,#f-notes:-moz-placeholder{color:#fff}#f-email::-moz-placeholder,#f-fullname::-moz-placeholder,#f-notes::-moz-placeholder{color:#fff}#f-email:-ms-input-placeholder,#f-fullname:-ms-input-placeholder,#f-notes:-ms-input-placeholder{color:#fff}#medals{padding-top:200px;width:100%;height:200px}#medals>p{margin:0 auto;width:80vw}@media (min-width:850px){#medals>p{width:700px}}#medals #medals-cta{display:block;text-align:center;padding-top:30px}#medals{background-color:#283038}#medals>p{font-size:.9em;letter-spacing:.1em;text-align:center;text-transform:uppercase}@media (min-width:850px){#medals>p{font-size:1.5em}}#medals #medals-cta{font-size:.8em;color:#ef4136;text-transform:uppercase}#directory{display:flex;justify-content:flex-start;align-items:flex-start;flex-wrap:wrap;padding-left:10%;padding-right:10%;padding-top:40px}.list{flex:0 0 calc(50% - 20px);margin-right:15px;margin-bottom:25px}@media (min-width:850px){.list{flex:0 0 calc(25% - 50px);margin-right:50px}}.list h2{padding-top:15px}.list p{padding-top:5px}#directory{background-color:#283038}.list:hover h2{color:#ef4136}.list:hover p{color:#ef4136}.list h2{font-size:.9em;color:#fff;border-top:2px solid #ef4136;transition:color .3s}.list p{font-size:.7em;text-transform:uppercase;transition:color .3s}#biography{display:flex;justify-content:center;align-items:center;flex-wrap:nowrap;padding:50px 0 200px}@media (min-width:850px){#biography{padding:50px 10% 200px}}#arrow-left,#arrow-right{flex:0 0 auto;width:40px;height:40px;margin-bottom:200px}@media (min-width:850px){#arrow-left,#arrow-right{margin-bottom:0}}#arrow-left:hover .arrow-1,#arrow-right:hover .arrow-1{fill:#ef4136}#arrow-left .arrow-1,#arrow-right .arrow-1{transition:fill .3s}#arrow-left{padding-right:0}@media (min-width:850px){#arrow-left{padding-right:130px}}#arrow-right{padding-left:0}@media (min-width:850px){#arrow-right{padding-left:130px}}#writeups{flex:0 0 80vw;display:flex;justify-content:space-between;align-items:flex-start;flex-wrap:nowrap;overflow:hidden}@media (min-width:850px){#writeups{flex:0 0 50%}}#writeups .writeup{flex:0 0 calc(100% - 40px);height:100%;padding-left:20px;padding-right:20px}#biography{background-color:#283038}#arrow-right{transform:rotate(270deg)}#arrow-left{transform:rotate(90deg)}#writeups p{font-size:.8em;line-height:1.5em}#explore{padding-top:25vw;padding-left:10vw;width:90vw;height:40vw}#explore h2{width:80vw}@media (min-width:850px){#explore h2{width:600px}}#explore p{margin-top:10px}#explore{background-repeat:no-repeat;background-position:center;background-size:cover;background-color:#283038}#explore h2{color:#fff;font-size:.9em;line-height:1.5em}#explore h2 a{color:#fff;font-size:.9em;line-height:1.5em;transition:all .3s}#explore h2 a:hover{color:#ef4136}@media (min-width:850px){#explore h2{font-size:1.5em}}#explore p a{color:#ef4136;font-size:.7em;letter-spacing:.1em;text-transform:uppercase;transition:all .3s}#explore p a:hover{color:#fff}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
